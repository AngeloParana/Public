let

metaDocumentation = type function (
    searchtext as (type text meta [
        Documentation.FieldCaption = "Search any keyword of a custom function",
        Documentation.SampleValues = {"Search.."},
        // Formatting.IsMultiLine = true,
        Formatting.IsCode = true
    ])
) as text meta [
Documentation.Name = "Search Function by Angelo Parana",
Documentation.LongDescription = "This Power Query M designed to query custom Functions on a repository"
],



CustomFunction =
    (Search as text) as table=>
        let
            myFunction = Json.Document(Binary.Decompress(Binary.FromText("BcHBDYAgDADAXRyA/v25AX9jCDRVSaBF2sa4vXf7vtxmQ1eAPGq4qt1eAkqHSUMUNr6oScwzc4bopVUEFDZiUxjy0nyc5pfQ1aSn0xmtCutyHD8=", BinaryEncoding.Base64), Compression.Deflate)){0}{0},
            Source = Json.Document(Web.Contents(myFunction)),
            FlatTable = Table.FromList(Source, Splitter.SplitByNothing(), {"Functions"}, null, ExtraValues.Error),
            ExpandFunctions = Table.ExpandRecordColumn(FlatTable, "Functions", {"name", "download_url"}),
            SearchFunction = Table.SelectRows(ExpandFunctions, each Text.Contains([name],Search,Comparer.OrdinalIgnoreCase)),
            GetFunction = Table.AddColumn(
                                        SearchFunction, "File", each 
                                                Text.FromBinary(Web.Contents([download_url]))
                                            ),
            return = Table.SelectColumns(GetFunction,{"name", "File"})
        in
            return
in 
Value.ReplaceType( CustomFunction, metaDocumentation )
